/*This file contains helper classes that can be used for different purposes like constructing simple layouts with flexbox helper classes or*/
/*overriding components styling. These can be used whenever building a separate component feels like an overkill*/
@supports(flex-wrap: wrap){
  /*Fix for UC Browser. It doesn't support flex-wrap: wrap, so no flexbox for UC :(.*/
  .flex {
    display: flex;
  }
}
.flexboxtweener .flex{
  /*Adding flexbox for IE11 and IE10 since they don't support @supports syntax.*/
  display: flex;
}
.wrap--nowrap {
  flex-wrap: nowrap;
}
.wrap--wrap {
  flex-wrap: wrap;
}
.wrap--wrap-reverse {
  flex-wrap: wrap-reverse;
}
.flex--1 {
  flex: 1 1 auto;
}
.order--1 {
  order: 1;
}
.direction--column {
  flex-direction: column;
}
.direction--column-reverse {
  flex-direction: column-reverse;
}
.direction--row {
  flex-direction: row;
}
.direction--row-reverse {
  flex-direction: row-reverse;
}
.justify--start {
  justify-content: flex-start;
}
.justify--end {
  justify-content: flex-end;
}
.justify--center {
  justify-content: center;
}
.justify--space-between {
  justify-content: space-between;
}
.justify--space-around {
  justify-content: space-around;
}
.align-items--start {
  align-items: flex-start;
}
.align-items--end {
  align-items: flex-end;
}
.align-items--center {
  align-items: center;
}
.align-items--baseline {
  align-items: baseline;
}
.align-items--stretch {
  align-items: stretch;
}
.float--left {
  float: left;
}
.float--right {
  float: right;
}
.clear {
  clear: both;
}
.clear--left {
  clear: left;
}
.table {
  display: table;
  height: 100%;
  width: 100%;
  table-layout: fixed;
}
.table-cell {
  display: table-cell;
  vertical-align: middle;
}
.align--top {
  vertical-align: top;
}
.align--bottom {
  vertical-align: bottom;
}
.align--middle {
  vertical-align: middle;
}
.inline-block {
  display: inline-block;
}
.hidden {
  display: none;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.text-align--center {
  text-align: center !important;
}
.text-align--left {
  text-align: left;
}
.text-align--right {
  text-align: right;
}
.uppercase {
  text-transform: uppercase;
}
.overflow--auto {
  overflow: auto;
  height: 100%;
  -webkit-overflow-scrolling: touch;
}
.overflow--hidden {
  overflow: hidden;
}
.context {
  overflow: hidden;
  display: block;
}
.multicolumn--2 {
  column-count: 2;
  column-gap: 30px;
}
.disable--select {
  user-select: none;
}
.cursor--pointer {
  cursor: pointer;
}
.cursor--grabbing {
  cursor: move;
  cursor: grabbing;
}
.underline {
  text-decoration: underline;
}
.no-list-style {
  list-style: none;
}
.cover-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.no-objectfit .cover-img,
.no-object-fit .cover-img {
  position: absolute;
  top: 50%;
  left: 50%;
  width: auto;
  height: auto;
  min-width: 100%;
  min-height: 100%;
  transform: translate3d(-50%, -50%, 0);
  object-fit: cover;
}